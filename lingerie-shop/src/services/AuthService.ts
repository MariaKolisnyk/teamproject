import axiosInstance from '../utils/axiosInstance';

/**
 * üîπ –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/auth/login`
 * @param credentials –û–±'—î–∫—Ç –∑ `email` —ñ `password`
 * @returns Promise –∑ –¥–∞–Ω–∏–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó (—Ç–æ–∫–µ–Ω —Ç–æ—â–æ)
 */
export const loginUser = async (credentials: { email: string; password: string }) => {
  try {
    const response = await axiosInstance.post('/auth/login', credentials);
    return response.data; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ (—Ç–æ–∫–µ–Ω, user)
  } catch (error) {
    console.error('‚ùå Error logging in:', error);
    throw error; // –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –¥–∞–ª—ñ
  }
};

/**
 * üîπ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/auth/register`
 * @param userData –û–±'—î–∫—Ç –∑ `email`, `password`, `name`, `surname`
 * @returns Promise –∑ –¥–∞–Ω–∏–º–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó (—Ç–æ–∫–µ–Ω, user ID —Ç–æ—â–æ)
 */
export const registerUser = async (userData: { email: string; password: string; name: string; surname: string }) => {
  try {
    const response = await axiosInstance.post('/auth/register', userData);
    return response.data; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ
  } catch (error) {
    console.error('‚ùå Error registering user:', error);
    throw error; // –ü–µ—Ä–µ–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –¥–∞–ª—ñ
  }
};

/**
 * üîπ –í–∏—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–ª–æ–≥-–∞—É—Ç)
 * –í–∏–¥–∞–ª—è—î —Ç–æ–∫–µ–Ω –∑—ñ `localStorage` —Ç–∞ –æ—á–∏—â–∞—î —Å–µ—Å—ñ—é
 */
export const logoutUser = () => {
  localStorage.removeItem('token'); // –í–∏–¥–∞–ª—è—î–º–æ —Ç–æ–∫–µ–Ω –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
  console.log('‚úÖ User logged out successfully');
};

/**
 * üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/user/profile/`
 * @returns Promise –∑ –¥–∞–Ω–∏–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const getUserProfile = async () => {
  try {
    const response = await axiosInstance.get('/user/profile/');
    return response.data;
  } catch (error) {
    console.error('‚ùå Error fetching user profile:', error);
    throw error;
  }
};
