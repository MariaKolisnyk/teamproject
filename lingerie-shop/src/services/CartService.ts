import axiosInstance from '../utils/axiosInstance';

/**
 * üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ —É –∫–æ—à–∏–∫—É
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/cart/`
 */
export const getCartItems = async () => {
  try {
    const response = await axiosInstance.get('/cart/');
    return response.data || []; // –£–Ω–∏–∫–Ω–µ–Ω–Ω—è `undefined`
  } catch (error: any) {
    console.error('‚ùå Error fetching cart items:', error.message);
    return [];
  }
};

/**
 * üîπ –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—à–∏–∫–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/cart/add/`
 * @param productId ID –ø—Ä–æ–¥—É–∫—Ç—É
 * @param quantity –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É
 */
export const addToCart = async (productId: number, quantity: number) => {
  try {
    const response = await axiosInstance.post('/cart/add/', { productId, quantity });
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error adding to cart:', error.message);
    throw error;
  }
};

/**
 * üîπ –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä —ñ–∑ –∫–æ—à–∏–∫–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/cart/remove/{productId}`
 * @param productId ID —Ç–æ–≤–∞—Ä—É
 */
export const removeFromCart = async (productId: number) => {
  try {
    const response = await axiosInstance.delete(`/cart/remove/${productId}`);
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error removing cart item:', error.message);
    throw error;
  }
};

/**
 * üîπ –û—á–∏—Å—Ç–∏—Ç–∏ –≤–µ—Å—å –∫–æ—à–∏–∫
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/cart/clear/`
 */
export const clearCart = async () => {
  try {
    const response = await axiosInstance.delete('/cart/clear/');
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error clearing cart:', error.message);
    throw error;
  }
};

/**
 * üîπ –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/cart/apply-promo/`
 * @param promoCode –ü—Ä–æ–º–æ–∫–æ–¥, —è–∫–∏–π –≤–≤–æ–¥–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
 */
export const applyPromoCode = async (promoCode: string) => {
  try {
    const response = await axiosInstance.post('/cart/apply-promo/', { promoCode });
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error applying promo code:', error.message);
    throw error;
  }
};

/**
 * ‚ùå –¢–∏–º—á–∞—Å–æ–≤–æ –≤–∏–º–∫–Ω–µ–Ω–∏–π –º–µ—Ç–æ–¥ `updateCartItem`, –æ—Å–∫—ñ–ª—å–∫–∏ —É –±–µ–∫–µ–Ω–¥—ñ –Ω–µ–º–∞—î —Ç–∞–∫–æ–≥–æ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∞.
 */
// export const updateCartItem = async (productId: number, quantity: number) => {
//   try {
//     const response = await axiosInstance.put('/cart/update/', { productId, quantity });
//     return response.data;
//   } catch (error: any) {
//     console.error('‚ùå Error updating cart item:', error.message);
//     throw error;
//   }
// };
