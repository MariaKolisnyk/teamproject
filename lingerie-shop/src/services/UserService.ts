import axiosInstance from '../utils/axiosInstance';

/**
 * üîπ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/auth/register`
 * @param userData –û–±'—î–∫—Ç `{ email, password, name, surname }`
 */
export const registerUser = async (userData: Record<string, any>) => {
  try {
    const response = await axiosInstance.post('/auth/register', userData);
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error registering user:', error.message);
    throw error;
  }
};

/**
 * üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–ª–æ–≥—ñ–Ω)
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/auth/login`
 * @param credentials –û–±'—î–∫—Ç `{ email, password }`
 */
export const loginUser = async (credentials: { email: string; password: string }) => {
  try {
    const response = await axiosInstance.post('/auth/login', credentials);
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error logging in user:', error.message);
    throw error;
  }
};

/**
 * üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/user/profile/`
 */
export const getUserProfile = async () => {
  try {
    const response = await axiosInstance.get('/auth/profile/');
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error fetching user profile:', error.message);
    throw error;
  }
};

/**
 * üîπ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –µ–Ω–¥–ø–æ—ñ–Ω—Ç: `/user/profile/`
 * @param profileData –û–±'—î–∫—Ç —ñ–∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ –ø—Ä–æ—Ñ—ñ–ª—é
 */
export const updateUserProfile = async (profileData: Record<string, any>) => {
  try {
    const response = await axiosInstance.put('/auth/profile/', profileData);
    return response.data;
  } catch (error: any) {
    console.error('‚ùå Error updating user profile:', error.message);
    throw error;
  }
};

/**
 * üîπ –í–∏—Ö—ñ–¥ —ñ–∑ —Å–∏—Å—Ç–µ–º–∏ (–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞)
 */
export const logoutUser = () => {
  localStorage.removeItem('authToken'); // –í–∏–¥–∞–ª—è—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
};

/**
 * ‚ùå –¢–∏–º—á–∞—Å–æ–≤–æ –≤–∏–º–∫–Ω–µ–Ω—ñ –º–µ—Ç–æ–¥–∏, –æ—Å–∫—ñ–ª—å–∫–∏ –±–µ–∫–µ–Ω–¥ —ó—Ö –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î.
 * –Ø–∫—â–æ —Ü—ñ –º–µ—Ç–æ–¥–∏ –∑–Ω–∞–¥–æ–±–ª—è—Ç—å—Å—è, —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π —ó—Ö —Ç–∞ —É—Ç–æ—á–Ω–∏ —É –±–µ–∫–µ–Ω–¥—É.
 */

// export const getAllUsers = async () => {
//   console.warn("‚ö†Ô∏è This endpoint is not defined in the provided API documentation.");
//   return axiosInstance.get('/users');
// };

// export const getUserById = async (id: number) => {
//   console.warn("‚ö†Ô∏è This endpoint is not defined in the provided API documentation.");
//   return axiosInstance.get(`/users/${id}`);
// };

// export const deleteUser = async (id: number) => {
//   console.warn("‚ö†Ô∏è This endpoint is not defined in the provided API documentation.");
//   return axiosInstance.delete(`/users/${id}`);
// };

// export const getUserByEmail = async (email: string) => {
//   console.warn("‚ö†Ô∏è This endpoint is not defined in the provided API documentation.");
//   return axiosInstance.get(`/users/email/${email}`);
// };
