import React, { useState, useEffect } from 'react';
import axiosInstance from '../utils/axiosInstance'; // –î–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ API
import './Profile.scss'; // –Ü–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤

const Profile: React.FC = () => {
  const [user, setUser] = useState({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
  }); // –°—Ç–∞–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

  const [newPassword, setNewPassword] = useState(''); // –°—Ç–∞–Ω –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
  const [message, setMessage] = useState<string | null>(null); // –°—Ç–∞–Ω –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
  const [loading, setLoading] = useState(true); // –°—Ç–∞–Ω –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  const [error, setError] = useState<string | null>(null); // –°—Ç–∞–Ω –¥–ª—è –ø–æ–º–∏–ª–æ–∫

  // üìå –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  useEffect(() => {
    const fetchUserProfile = async () => {
      try {
        const response = await axiosInstance.get('/user/profile/');
        setUser(response.data);
      } catch (err) {
        setError('Failed to load profile data');
      } finally {
        setLoading(false);
      }
    };

    fetchUserProfile();
  }, []);

  // üìå –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
  const handleProfileUpdate = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await axiosInstance.put('/user/profile/update', user);
      setMessage('Profile updated successfully!');
    } catch (err) {
      setError('Failed to update profile');
    }
  };

  // üìå –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è
  const handlePasswordChange = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await axiosInstance.post('/user/change-password', { newPassword });
      setMessage('Password changed successfully!');
      setNewPassword('');
    } catch (err) {
      setError('Failed to change password');
    }
  };

  // üìå –í–∏—Ö—ñ–¥ —ñ–∑ —Å–∏—Å—Ç–µ–º–∏
  const handleLogout = async () => {
    try {
      await axiosInstance.post('/auth/logout');
      localStorage.removeItem('authToken'); // –í–∏–¥–∞–ª—è—î–º–æ —Ç–æ–∫–µ–Ω
      window.location.href = '/sign-in'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É
    } catch (err) {
      setError('Failed to logout');
    }
  };

  if (loading) return <p>Loading profile...</p>;
  if (error) return <p className="error-message">{error}</p>;

  return (
    <div className="profile-page">
      <h1>User Profile</h1>

      {message && <p className="success-message">{message}</p>}

      {/* üìå –§–æ—Ä–º–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é */}
      <form onSubmit={handleProfileUpdate}>
        <label>First Name:</label>
        <input
          type="text"
          value={user.firstName}
          onChange={(e) => setUser({ ...user, firstName: e.target.value })}
        />

        <label>Last Name:</label>
        <input
          type="text"
          value={user.lastName}
          onChange={(e) => setUser({ ...user, lastName: e.target.value })}
        />

        <label>Email:</label>
        <input type="email" value={user.email} disabled />

        <label>Phone:</label>
        <input
          type="text"
          value={user.phone}
          onChange={(e) => setUser({ ...user, phone: e.target.value })}
        />

        <button type="submit">Update Profile</button>
      </form>

      {/* üìå –§–æ—Ä–º–∞ –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—è */}
      <form onSubmit={handlePasswordChange}>
        <label>New Password:</label>
        <input
          type="password"
          value={newPassword}
          onChange={(e) => setNewPassword(e.target.value)}
        />

        <button type="submit">Change Password</button>
      </form>

      {/* üìå –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É –∑ —Å–∏—Å—Ç–µ–º–∏ */}
      <button className="logout-button" onClick={handleLogout}>
        Logout
      </button>
    </div>
  );
};

export default Profile;
